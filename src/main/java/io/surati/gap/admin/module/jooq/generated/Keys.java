/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.admin.module.jooq.generated;


import io.surati.gap.admin.module.jooq.generated.tables.AccessProfile;
import io.surati.gap.admin.module.jooq.generated.tables.AppUser;
import io.surati.gap.admin.module.jooq.generated.tables.EventLog;
import io.surati.gap.admin.module.jooq.generated.tables.Person;
import io.surati.gap.admin.module.jooq.generated.tables.Profile;
import io.surati.gap.admin.module.jooq.generated.tables.records.AccessProfileRecord;
import io.surati.gap.admin.module.jooq.generated.tables.records.AppUserRecord;
import io.surati.gap.admin.module.jooq.generated.tables.records.EventLogRecord;
import io.surati.gap.admin.module.jooq.generated.tables.records.PersonRecord;
import io.surati.gap.admin.module.jooq.generated.tables.records.ProfileRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessProfileRecord> ACCESS_PROFILE_PKEY = Internal.createUniqueKey(AccessProfile.ACCESS_PROFILE, DSL.name("access_profile_pkey"), new TableField[] { AccessProfile.ACCESS_PROFILE.ACCESS_ID, AccessProfile.ACCESS_PROFILE.PROFILE_ID }, true);
    public static final UniqueKey<AppUserRecord> APP_USER_PKEY = Internal.createUniqueKey(AppUser.APP_USER, DSL.name("app_user_pkey"), new TableField[] { AppUser.APP_USER.ID }, true);
    public static final UniqueKey<EventLogRecord> EVENT_LOG_PKEY = Internal.createUniqueKey(EventLog.EVENT_LOG, DSL.name("event_log_pkey"), new TableField[] { EventLog.EVENT_LOG.ID }, true);
    public static final UniqueKey<PersonRecord> PERSON_PKEY = Internal.createUniqueKey(Person.PERSON, DSL.name("person_pkey"), new TableField[] { Person.PERSON.ID }, true);
    public static final UniqueKey<ProfileRecord> PROFILE_PKEY = Internal.createUniqueKey(Profile.PROFILE, DSL.name("profile_pkey"), new TableField[] { Profile.PROFILE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccessProfileRecord, ProfileRecord> PROFILE_ACCESS_PROFILE_PROFILE_ID_FKEY = Internal.createForeignKey(AccessProfile.ACCESS_PROFILE, DSL.name("profile_access_profile_profile_id_fkey"), new TableField[] { AccessProfile.ACCESS_PROFILE.PROFILE_ID }, Keys.PROFILE_PKEY, new TableField[] { Profile.PROFILE.ID }, true);
    public static final ForeignKey<AppUserRecord, PersonRecord> APP_USER_ID_FKEY = Internal.createForeignKey(AppUser.APP_USER, DSL.name("app_user_id_fkey"), new TableField[] { AppUser.APP_USER.ID }, Keys.PERSON_PKEY, new TableField[] { Person.PERSON.ID }, true);
    public static final ForeignKey<AppUserRecord, ProfileRecord> PROFILE_APP_USER_PROFILE_ID_FKEY = Internal.createForeignKey(AppUser.APP_USER, DSL.name("profile_app_user_profile_id_fkey"), new TableField[] { AppUser.APP_USER.PROFILE_ID }, Keys.PROFILE_PKEY, new TableField[] { Profile.PROFILE.ID }, true);
}
